-- MySQL Script generated by MySQL Workbench
-- Thu Feb 18 15:44:44 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema universidade_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema universidade_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `universidade_db` DEFAULT CHARACTER SET utf8 ;
USE `universidade_db` ;

-- -----------------------------------------------------
-- Table `universidade_db`.`departamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `universidade_db`.`departamento` (
  `dptoId` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `numdpto` INT(3) NOT NULL,
  `centro` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`dptoId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `universidade_db`.`telefonesProfessor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `universidade_db`.`telefonesProfessor` (
  `idtelefonesProfessor` INT NOT NULL,
  `telefone1` INT(11) NOT NULL,
  `telefone2` INT(11) NULL,
  PRIMARY KEY (`idtelefonesProfessor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `universidade_db`.`professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `universidade_db`.`professor` (
  `professorId` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `cpf` VARCHAR(45) NOT NULL,
  `departamento_dptoId` INT NOT NULL,
  `telefonesProfessor_idtelefonesProfessor` INT NOT NULL,
  PRIMARY KEY (`professorId`),
  INDEX `fk_professor_departamento1_idx` (`departamento_dptoId` ASC) VISIBLE,
  INDEX `fk_professor_telefonesProfessor1_idx` (`telefonesProfessor_idtelefonesProfessor` ASC) VISIBLE,
  CONSTRAINT `fk_professor_departamento1`
    FOREIGN KEY (`departamento_dptoId`)
    REFERENCES `universidade_db`.`departamento` (`dptoId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_professor_telefonesProfessor1`
    FOREIGN KEY (`telefonesProfessor_idtelefonesProfessor`)
    REFERENCES `universidade_db`.`telefonesProfessor` (`idtelefonesProfessor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `universidade_db`.`curso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `universidade_db`.`curso` (
  `cursoId` INT NOT NULL,
  `tipo` ENUM('TECNICO', 'GRADUACAO', 'MESTRADO', 'DOUTORADO') NOT NULL,
  `coordenador_professorId` INT NOT NULL,
  `vicecoordenador_professorId` INT NOT NULL,
  `departamento_dptoId` INT NOT NULL,
  PRIMARY KEY (`cursoId`),
  INDEX `fk_curso_professor1_idx` (`coordenador_professorId` ASC) VISIBLE,
  INDEX `fk_curso_professor2_idx` (`vicecoordenador_professorId` ASC) VISIBLE,
  INDEX `fk_curso_departamento1_idx` (`departamento_dptoId` ASC) VISIBLE,
  CONSTRAINT `fk_curso_professor1`
    FOREIGN KEY (`coordenador_professorId`)
    REFERENCES `universidade_db`.`professor` (`professorId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_curso_professor2`
    FOREIGN KEY (`vicecoordenador_professorId`)
    REFERENCES `universidade_db`.`professor` (`professorId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_curso_departamento1`
    FOREIGN KEY (`departamento_dptoId`)
    REFERENCES `universidade_db`.`departamento` (`dptoId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `universidade_db`.`telefonesAluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `universidade_db`.`telefonesAluno` (
  `telefoneAlunoId` INT NOT NULL AUTO_INCREMENT,
  `telefone1` INT(11) NOT NULL,
  `telefone2` INT(11) NULL,
  PRIMARY KEY (`telefoneAlunoId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `universidade_db`.`aluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `universidade_db`.`aluno` (
  `idaluno` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `nrmatricula` VARCHAR(45) NOT NULL,
  `cpf` VARCHAR(45) NOT NULL,
  `endereco` VARCHAR(45) NOT NULL,
  `datanascimento` VARCHAR(45) NOT NULL,
  `departamento_dptoId` INT NOT NULL,
  `curso_cursoId` INT NOT NULL,
  `telefonesAluno_telefoneAlunoId` INT NOT NULL,
  PRIMARY KEY (`idaluno`),
  INDEX `fk_aluno_departamento_idx` (`departamento_dptoId` ASC) VISIBLE,
  INDEX `fk_aluno_curso1_idx` (`curso_cursoId` ASC) VISIBLE,
  INDEX `fk_aluno_telefonesAluno1_idx` (`telefonesAluno_telefoneAlunoId` ASC) VISIBLE,
  UNIQUE INDEX `nrmatricula_UNIQUE` (`nrmatricula` ASC) VISIBLE,
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC) VISIBLE,
  CONSTRAINT `fk_aluno_departamento`
    FOREIGN KEY (`departamento_dptoId`)
    REFERENCES `universidade_db`.`departamento` (`dptoId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_aluno_curso1`
    FOREIGN KEY (`curso_cursoId`)
    REFERENCES `universidade_db`.`curso` (`cursoId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_aluno_telefonesAluno1`
    FOREIGN KEY (`telefonesAluno_telefoneAlunoId`)
    REFERENCES `universidade_db`.`telefonesAluno` (`telefoneAlunoId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `universidade_db`.`disciplinas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `universidade_db`.`disciplinas` (
  `disciplinasId` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `descricao` VARCHAR(45) NOT NULL,
  `nrcreditos` INT NOT NULL,
  `departamento_dptoId` INT NOT NULL,
  PRIMARY KEY (`disciplinasId`),
  INDEX `fk_disciplinas_departamento1_idx` (`departamento_dptoId` ASC) VISIBLE,
  CONSTRAINT `fk_disciplinas_departamento1`
    FOREIGN KEY (`departamento_dptoId`)
    REFERENCES `universidade_db`.`departamento` (`dptoId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `universidade_db`.`oferta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `universidade_db`.`oferta` (
  `ofertaId` INT NOT NULL,
  `horario` DATETIME NOT NULL,
  `disciplinas_disciplinasId` INT NOT NULL,
  `professor_professorId` INT NOT NULL,
  PRIMARY KEY (`ofertaId`),
  INDEX `fk_oferta_disciplinas1_idx` (`disciplinas_disciplinasId` ASC) VISIBLE,
  INDEX `fk_oferta_professor1_idx` (`professor_professorId` ASC) VISIBLE,
  CONSTRAINT `fk_oferta_disciplinas1`
    FOREIGN KEY (`disciplinas_disciplinasId`)
    REFERENCES `universidade_db`.`disciplinas` (`disciplinasId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_oferta_professor1`
    FOREIGN KEY (`professor_professorId`)
    REFERENCES `universidade_db`.`professor` (`professorId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
